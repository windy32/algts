diff -ru target-mips_r2_uClibc-0.9.33.2_bak/iproute2-3.3.0/include/linux/pkt_sched.h target-mips_r2_uClibc-0.9.33.2/iproute2-3.3.0/include/linux/pkt_sched.h
--- target-mips_r2_uClibc-0.9.33.2_bak/iproute2-3.3.0/include/linux/pkt_sched.h	2014-04-09 04:44:11.544439000 +0800
+++ target-mips_r2_uClibc-0.9.33.2/iproute2-3.3.0/include/linux/pkt_sched.h	2014-04-09 13:05:10.626699928 +0800
@@ -668,6 +668,7 @@
 	TCA_CODEL_LIMIT,
 	TCA_CODEL_INTERVAL,
 	TCA_CODEL_ECN,
+	TCA_CODEL_MAXDELAY,
 	__TCA_CODEL_MAX
 };
 
diff -ru target-mips_r2_uClibc-0.9.33.2_bak/iproute2-3.3.0/tc/q_codel.c target-mips_r2_uClibc-0.9.33.2/iproute2-3.3.0/tc/q_codel.c
--- target-mips_r2_uClibc-0.9.33.2_bak/iproute2-3.3.0/tc/q_codel.c	2014-04-09 04:44:11.792439000 +0800
+++ target-mips_r2_uClibc-0.9.33.2/iproute2-3.3.0/tc/q_codel.c	2014-04-09 13:19:56.435544172 +0800
@@ -63,6 +63,7 @@
 	unsigned limit = 0;
 	unsigned target = 0;
 	unsigned interval = 0;
+	unsigned max_delay = 0;
 	int ecn = -1;
 	struct rtattr *tail;
 
@@ -85,6 +86,12 @@
 				fprintf(stderr, "Illegal \"interval\"\n");
 				return -1;
 			}
+		} else if (strcmp(*argv, "maxdelay") == 0) {
+			NEXT_ARG();
+			if (get_time(&max_delay, *argv)) {
+				fprintf(stderr, "Illegal \"maxdelay\"\n");
+				return -1;
+			}
 		} else if (strcmp(*argv, "ecn") == 0) {
 			ecn = 1;
 		} else if (strcmp(*argv, "noecn") == 0) {
@@ -108,6 +115,8 @@
 		addattr_l(n, 1024, TCA_CODEL_INTERVAL, &interval, sizeof(interval));
 	if (target)
 		addattr_l(n, 1024, TCA_CODEL_TARGET, &target, sizeof(target));
+	if (max_delay)
+		addattr_l(n, 1024, TCA_CODEL_MAXDELAY, &max_delay, sizeof(max_delay));
 	if (ecn != -1)
 		addattr_l(n, 1024, TCA_CODEL_ECN, &ecn, sizeof(ecn));
 	tail->rta_len = (void *) NLMSG_TAIL(n) - (void *) tail;
@@ -120,6 +129,7 @@
 	unsigned limit;
 	unsigned interval;
 	unsigned target;
+	unsigned max_delay;
 	unsigned ecn;
 	SPRINT_BUF(b1);
 
@@ -143,6 +153,11 @@
 		interval = rta_getattr_u32(tb[TCA_CODEL_INTERVAL]);
 		fprintf(f, "interval %s ", sprint_time(interval, b1));
 	}
+	if (tb[TCA_CODEL_MAXDELAY] &&
+	    RTA_PAYLOAD(tb[TCA_CODEL_MAXDELAY]) >= sizeof(__u32)) {
+		max_delay = rta_getattr_u32(tb[TCA_CODEL_MAXDELAY]);
+		fprintf(f, "maxdelay %s ", sprint_time(max_delay, b1));
+	}
 	if (tb[TCA_CODEL_ECN] &&
 	    RTA_PAYLOAD(tb[TCA_CODEL_ECN]) >= sizeof(__u32)) {
 		ecn = rta_getattr_u32(tb[TCA_CODEL_ECN]);
